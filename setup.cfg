[metadata]
name = pydl
author = Benjamin Alan Weaver
author_email = benjamin.weaver@noirlab.edu
license = BSD 3-Clause License
license_file = LICENSE.rst
url = https://github.com/weaverba137/pydl
description = Library of IDL astronomy routines converted to Python.
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = weaverba137/pydl
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering :: Physics
    Topic :: Scientific/Engineering :: Astronomy

[options]
zip_safe = False
packages = find:
include_package_data = True
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires =
    astropy>=5.0
    scipy>=1.3

[options.extras_require]
all =
    matplotlib
test =
    pytest-astropy
    pytest-mock
    tox
docs =
    sphinx-astropy

[options.package_data]
# * = *.c
pydl.tests = t/*
pydl.goddard.tests = t/*
pydl.photoop.tests = t/*
pydl.pydlspec2d.tests = t/*
pydl.pydlutils = data/cooling/*, data/filters/*
pydl.pydlutils.tests = t/*

[options.entry_points]
console_scripts =
    get_juldate = pydl.goddard.astro:get_juldate_main
    hogg_iau_name = pydl.pydlutils.misc:hogg_iau_name_main
    compute_templates = pydl.pydlspec2d.spec1d:template_input_main

[tool:pytest]
testpaths = "pydl" "docs"
astropy_header = true
xfail_strict = true
doctest_plus = enabled
text_file_format = rst
addopts = --color=yes --doctest-rst

[coverage:run]
relative_files = True
omit =
    pydl/_astropy_init*
    pydl/conftest.py
    pydl/*setup_package*
    pydl/tests/*
    pydl/*/tests/*
    pydl/extern/*
    pydl/version*
    */pydl/_astropy_init*
    */pydl/conftest.py
    */pydl/*setup_package*
    */pydl/tests/*
    */pydl/*/tests/*
    */pydl/extern/*
    */pydl/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_

# TODO: Un-ignore and fix these warnings.
# E126 continuation line over-indented for hanging indent
# E127 continuation line over-indented for visual indent
# E128 continuation line under-indented for visual indent
# E201 whitespace after '{'
# E202 whitespace before ']'
# E203 whitespace before ','
# E221 multiple spaces before operator
# E225 missing whitespace around operator
# E226 missing whitespace around arithmetic operator
# E227 missing whitespace around bitwise or shift operator
# E231 missing whitespace after ','
# E251 unexpected spaces around keyword / parameter equals
# E501 line too long
# E731 do not assign a lambda expression, use a def
# E741 ambiguous variable name 'l'
# W503 line break before binary operator
# W504 line break after binary operator
# W505 doc line too long
[flake8]
max-line-length = 100
max-doc-length = 79
ignore = E126,E127,E128,E201,E202,E203,E221,E225,E226,E227,E231,E251,E501,E731,E741,W503,W504,W505
